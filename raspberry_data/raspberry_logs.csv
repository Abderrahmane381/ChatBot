mot_cl√©,post_et_reponses
raspberry logs,"i am a software developer, and have a lot of experience with coding web appsservers etc. but i have never programmed any devices. never used a raspberry pi, etc. so looking for some direction here. i have an idea of something i want to build. essentially its multiple smart buttons something like multiple each of which trigger alexa to play a specific song on primespotifyapple music. sounds dumb, but i have some cool ideas for the context. strategy 1 the easiest way to build this is to get a bunch of program them through the flic app to trigger a web request to an aws lambda that triggers a custom alexa skill for playing a song. thats cool, sure. but over time i will want more and more of these buttons to play different songs. maybe 50 of them. and with each flic being around 35, thats not feasible. strategy 2 get a bunch of cheap bluetooth buttons from aliexpress like then id use a raspberry pi to connect to all of them. again, i dont know a whole lot about raspberry pis, but i figure i could program it to listen to these bluetooth devices to trigger web requests to an aws lambda that triggers an alexa skill. id like to be able to build this out for friends and family too one day, maybe sell them. thats far in the future, but im looking for the cheapest simplest option. is strategy 2 feasible and the best way to go about this? anything im overlooking? || im doing this with zigbee buttons and home assistant. the actual thing that plays the music has changed over the years, it has been for example mpd, mopidy and librespot and at the moment its lms. i dont know about playing music on alexa echo? from a home assistant automation but im confident that theres an integration for that. || todays agao,i have built a small remote control to trigger such things on my alexa using esp32."
raspberry logs,i am looking for an iot voltage sensor project. i want to record the voltage of my home and record it. i had a basic ardurino project but couldnt get it aligned with my voltmeter too many variances. i am in brazil an the voltage varies and sometimes drops a leg. lol usually it is between 210250v then sometimes for unknown reason it goes up to 300 thats when everything starts buzzing and i hit the circuit braker. i have a plug in voltmeter so when i hear the fans increase spinning i look over at it. then sometimes randomly it drops a leg to 127 volts then slowly goes down to nothing. later slowly creeps up to normal over an hour. so looking for a cheap and easy way to log into a raspberry pi or something i can buy in brazil to log this data and can hand it over to the enel company. not to mention set up a telegram bot to send a message when outside parameters i specialize. i can program almost anything just need the digital signal for the voltage. suggestions or ideas without buying a bunch of electronic parts and becoming an elec eng.? || i searched a bit for esp32 power quality sensor and i think this wireless power meter should do the trick. just attach it to a powerbank to keep it running during an outage. edit typos || ive used the c70 multimeter for that. i wrote simple python code for handling the incoming values. easy to modify. || i had a similar problem a few years ago and an electrician found that there was a loose ground connection in the house. you could also just take a picture of your volt meter when the problem occurs.
raspberry logs,"hey all, so i am wanting to do my first iot project. goal 247 web server running on a micro controllermicroprocessor. when it receives a request that contains a uniqueperuser identifier. log the identifier received to a file. send a wol message to the main server to boot. my use case i have a plex media server and a large number of notsotechsavy siblings. keeping the server on 247, even idling, draws a decent amount of power that id like to cheapen. so the solution is to turn it off when it is not in use, but i want the ability for anyone to turn it on when theyd like. getting this to work insecurely is very easy, just open the right ports and share the magic packet with everyone. but i want something that is more secure. so what i need is a small device that can remain on 247 that draws as little power as possible. it would act as a web server, so that any of my users can login with their unique details to turn on the server. i have a good understanding of the software, network, security etc. but i am not not sure of the hardware. i am currently looking at raspberry pi but even that looks overkill for what i want. || does not get much smaller than this for arduino use esp8266 only if you happen to have some flying around. esp32 is so much better. use micropython or espruino or arduino. since arduino can do it, so can the other ones. || if you are still interested to achieve this using esp controller x200b i have opensource project that meet your requirements however, it is complex to setup and i dont maintain it anymore. esp32 connect to mqtt from aws iot pwa userinterface and as urustyswashplate stated, you could use the library but you will need to write esp8266esp32 firmware and either create webserver if you can do portforwarding or use services for iot i.e. better approach that i see havent tested it though is they support multiple plugins, and one of them is my wakeonlan library"
raspberry logs,"i have some raspberry pi as iot devices running a couple of applications receiving and sending data from some sensors. theses scripts are generating some logs which occasionally i need for debugging processes. however, i am ending up with very large log files and since the rpis are at a remote location, it is not a convenient way to extract them. so for now, i am rotating the logs such that there are a few log files of a particular size. that being said, i would like to have a centralized location for these logs, where i would have logs for different rpis different locations, clients and such but i can have them in one place. right now i am looking into rsyslog and trying to figure out if itll work the way i want to or if there are other solutions. am i on the right track? the tutorials ive seen seem to be in the same network, but i think it should work regardless. any other recommendations on how i could do this? || suggest you look at remote syslog is of course a battle tested solution, nothing wrong with that if it solves your problems! || what type of connectivity do you have ? slow vs. fast ? metered vs unmetered ? noisy or clean ? reliable ? how comfortable are you with message queues ? are you open to paying for a cloud based solution or do you want to self host ? || i was also generating logs when i was working on azure edge computing. what i did was, setup a grafana and grafana loki on aks azure kubernetes . now using fluentd, sent the logs to loki and visualised in grafana. grafana loki has a lot of plugins including its own agent called promtail."
raspberry logs,"hello all, if this is the wrong place to ask, please tell me and i will post elsewhere. i would like to recreate this project done by exxon mobil. has anyone here done a project like this using a raspberry pi and windows iot im learning c to monitorlog gas levels, etc. using sensors or anything like that? i tweeted exxon for a build guide and havent heard back, which is disappointing but i think this would be a cool project to monitor and present the data. i work in the gas industry so this would be cool to bring into the office. thank you all for your guidance. || "
raspberry logs,"i want to use something like htmlcss to design the system and probably use javascript to make the system work. is there any other technologies i should or would need to use to make this system work? i want a simple user interface where i can have someone log on to the system then allow devices such as raspberry pis or sensors to connect to the software and allow it to send data which i could then chart the data on the software as well. anyone technologies you could recommend me learning to make this software? i dont want to make it too complicated yet || nodejs socket.io express react or jquery if you prefer. get the browser to show data from the server in realtime, then setup a tcp server to handle incoming data from devices, and forward to browser. graphing is most probably only in the browser. || mqtt or 0mq would be good for sensor to server communication. || try which is nodered based."
